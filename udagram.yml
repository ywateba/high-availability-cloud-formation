Parameters:
    EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

    VpcID: 
      Description: Please enter the ID for this VPC
      Type: String
      

    VpcCIDR: 
      Description: Please enter the IP range (CIDR notation) for this VPC
      Type: String
      

    PublicSubnet1:
      Description: Please enter the network address for the public subnet in the first Availability Zone
      Type: String
      

    PublicSubnet2:
      Description: Please enter the network address for the public subnet in the second Availability Zone
      Type: String
      

    PrivateSubnet1:
      Description: Please enter the network address for the private subnet in the first Availability Zone
      Type: String
      

    PrivateSubnet2:
      Description: Please enter the network address for the private subnet in the second Availability Zone
      Type: String
      

    ImageId:
      Description: AMI identifier
      Type: String
   


Resources:

######################## Security groups #################
  BastionsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: Security group for Bastion servers
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref VpcIDCIDR

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: Security group for Application servers
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

###############  IAM SETTINGS #######################

  # WebServerInstanceRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: web-servers-instance-role"
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: 'Allow'
  #         Principal:
  #           Service:
  #           - 'ec2.amazonaws.com'
  #         Action:
  #         - 'sts:AssumeRole'
  #     Policies:
  #       - PolicyName: s3
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #           - Effect: Allow
  #             Action:
  #             - 's3:PutObject*'
  #             - 's3:GetObject*'
  #             - 's3:DeleteObject*'
  #             Resource:
  #               - arn:aws:s3:::arydevs-learn

  # WebServerInstanceProfile:
  #   Type: AWS::IAM::InstanceProfile
  #   Properties:
  #     Path: '/'
  #     Roles:
  #     - !Ref WebServerInstanceRole


###################  LOAD BALANCERS ###############################
  
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref VpcID
       
  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "60"

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  # HttpsListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     DefaultActions:
  #     - Type: forward
  #       TargetGroupArn:
  #         Ref: WebAppTargetGroup
  #     LoadBalancerArn:
  #       Ref: WebAppLoadBalancer
  #     Port: '443'
  #     Protocol: HTTPS
  #     SslPolicy: ELBSecurityPolicy-2016-08  # Use an appropriate SSL policy
  #     Certificates:
  #       - CertificateArn: arn:aws:acm:us-east-1:123456789012:certificate/your-ssl-certificate

  # HttpToHttpsRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #       - Type: redirect
  #         RedirectConfig:
  #           Protocol: HTTPS
  #           Port: "443"
  #           StatusCode: HTTP_301
  #     Conditions:
  #       - Field: host-header
  #         HostHeaderConfig:
  #           Values:
  #             - "*"
  #     ListenerArn: !Ref HttpListener

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'HttpListener'
      Priority: 1

  ############## EC2 SERVERS ##########################
  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: "web-servers-template"
      LaunchTemplateData:
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
        ImageId: !Sub ami-0557a15b87f6559cf
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        InstanceType: t2.micro
        # IamInstanceProfile:
        #   Name: !Ref WebServerInstanceProfile

        # BlockDeviceMappings:
        # - DeviceName: "/dev/sdk"
        #   Ebs:
        #     VolumeSize: '50'

  ServersAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: 1
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      TargetGroupARNs:
        - !Ref WebAppTargetGroup